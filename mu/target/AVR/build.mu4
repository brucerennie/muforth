( This file is part of muforth: https://muforth.nimblemachines.com/

  Copyright 2002-2023 David Frech. (Read the LICENSE for details.)

( Load the AVR build environment.)

( Using STM32 board.)
-d via-disco
-- -d via-s08

ld lib/host-prompt.mu4        ( helpful prompt when in host mode)

.ifdef via-s08
   ( See if an avrprog - USB or SCI - target is connected.)
   ld target/S08/connected-target.mu4
.then

ld target/AVR/chains.mu4      ( metacompiler dictionary chains)
ld target/AVR/device/supported.mu4
ld lib/intel-hex.mu4
-- ld target/AVR/terminal.mu4
ld target/AVR/memory.mu4      ( basic target memory management)
ld target/AVR/asm-alts.mu4    ( factory and alternate opcode names)
ld target/AVR/asm.mu4
ld target/AVR/disasm.mu4
-- ld target/AVR/kernel.mu4
-- ld target/AVR/asm-test.mu4
ld target/AVR/meta.mu4        ( metacompiler, baby!)
ld target/AVR/interact.mu4    ( interaction with target)

.ifdef via-disco
   ( We need to talk to the ST-LINK. Load a stripped-down version of the
     support code.)

   -d stlink-ram-only
   ld target/ARM/debug/stlink-v2.mu4

   .ifdef st.read    -- found an ST-LINK
      -d avr
      ld target/ARM/stm32/atmel-spi-programming-host.mu4
      ld target/AVR/chat-iic-via-stm32-host.mu4
   .then
.then

.ifdef via-s08
   ld target/S08/firmware-map.mu4   ( addresses of command loops)

   .ifdef usb-target
      ld target/S08/chat-usb-host.mu4
      .ifdef spi-prog
         ld target/S08/avrprog-usb-host.mu4
      .then

   .ifdef mega8515  ( use serial chat - chip lacks TWI interface)
      ld target/S08/avrchat-serial-usb-host.mu4  ( chat over serial over USB)
   .else
      ld target/S08/iic-chat-usb-host.mu4  ( chat-oriented IIC)
   .then

      ld target/AVR/chat-iic-host.mu4  ( IIC chat)
      ld target/S08/midi-usb-host.mu4  ( test code to send MIDI over uart)

   .else .ifdef serial-target
      ld target/S08/chat-host.mu4
      .ifdef spi-prog
         ld target/S08/avrprog-serial-host.mu4
      .then
      ld target/S08/iic-serial-host.mu4
      -- ld target/S08/iic-chat-serial-host.mu4
      -- ld target/AVR/chat-iic-host.mu4  ( IIC chat)  ( same as for USB!)

   .else ( unsupported connected device)
      error" Unsupported connected device."

   .then .then
.then  ( via-s08)

( Programming the flash over SPI and programming it over chat use some
  of the same *vocabulary*, and the user generally wants one and not the
  other, so let's only load the SPI programming code when spi-prog is
  defined.

  NOTE: SPI programming is the *only* way to change the fuses and lock bits.)

( This will define fuses and locks but skip everything else unless spi-prog
  is defined.)
ld target/AVR/avrprog-spi.mu4    ( flash programming over SPI)

( Load *unless* we have loaded the SPI programming code.)
.ifndef spi-prog
   ld target/AVR/flash.mu4       ( flash programming over chat)
.then

.ifndef target-tty
   ld target/common/serial.mu4
.then
ld target/AVR/chat-serial-host.mu4

( These settings will stick around if we're loaded with ld!)
__meta
hex

( A sensible default: start compiling at application start.)
flash
