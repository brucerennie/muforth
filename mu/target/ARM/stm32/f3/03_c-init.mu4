( This file is part of muforth: https://muforth.dev/

  Copyright 2002-2023 David Frech. (Read the LICENSE for details.)

( Moved F303 init code here, so it can be shared among projects.)

__meta
hex

( Turn on HSE, which is driven by an 8 Mhz signal from the ST-LINK. Use it
  to drive the PLL to 72 Mhz - x9 - and when the PLL stabilizes, switch to
  it as the system clock source.

  Be careful to only run the APB1 bus at 36 Mhz!)

: wait-for-rdy  ( regaddr)
   begin  dup c@  2 and  until  ( wait for RDY bit)  drop ;

: clock-init
   5 ( HSEON + HSEBYP) [ RCC_CR 2 + #] tuck c!  wait-for-rdy ( wait for HSERDY)

.ifdef cpuclk-48m  ( for compatibility with F072)
   0051_0400 RCC_CFGR ! ( USBPRE=/1; PLLMUL=6; PLLSRC=HSE; APB1=/2)
   1 ( latency) FLASH_ACR set!  ( we need one cycle for 48 MHz clock!)
.else
   001d_0400 RCC_CFGR ! ( USBPRE=/1.5; PLLMUL=9; PLLSRC=HSE; APB1=/2)
   2 ( latency) FLASH_ACR set!  ( we need two cycles for 72 MHz clock!)
.then
   1 ( PLLON)          [ RCC_CR 3 + #] tuck c!  wait-for-rdy ( wait for PLLRDY)
   2 ( SW=PLL as sysclk)  RCC_CFGR tuck c!
   begin  dup c@ %1010 =  until  ( SW=PLL and SWS=PLL)  drop ;

: led-init
   -- Turn on clock to Port E
   ( Ports GFED_CBAH )
        [ %0010_0000  #16 << #] RCC_AHBENR set!
   -- Make PE8 to PE15 outputs
   5555_0000 GPIOE_MODER set! ;

: wait   for next ;
: flash-leds
   0000_ff00 dup GPIOE_BSRR !  3_0000 wait  GPIOE_BRR ! ;
